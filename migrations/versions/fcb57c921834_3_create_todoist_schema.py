"""3_create_todoist_schema

Revision ID: fcb57c921834
Revises: b430a6422cda
Create Date: 2022-01-18 12:14:34.315933

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fcb57c921834'
down_revision = 'b430a6422cda'
branch_labels = None
depends_on = None


def upgrade():
    # ====================
    # manual
    # ====================
    # sa.schema.CreateSchema('todoist')
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=1024), nullable=False),
    sa.Column('detail', sa.String(length=4096), nullable=False),
    sa.Column('status_type', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='todoist'
    )
    op.create_index(op.f('ix_todoist_tasks_status_type'), 'tasks', ['status_type'], unique=False, schema='todoist')
    op.create_index(op.f('ix_todoist_tasks_title'), 'tasks', ['title'], unique=False, schema='todoist')
    op.create_table('dones',
    sa.Column('id', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('note', sa.String(length=4096), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['todoist.tasks.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='todoist'
    )
    op.drop_table('dones')
    op.drop_index('ix_tasks_status_type', table_name='tasks')
    op.drop_index('ix_tasks_title', table_name='tasks')
    op.drop_table('tasks')
    # ### end Alembic commands ###


def downgrade():
    # ====================
    # manual
    # ====================
    # sa.schema.DropSchema('todoist')
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('tasks_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=1024), autoincrement=False, nullable=False),
    sa.Column('detail', sa.VARCHAR(length=4096), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('status_type', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='tasks_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_tasks_title', 'tasks', ['title'], unique=False)
    op.create_index('ix_tasks_status_type', 'tasks', ['status_type'], unique=False)
    op.create_table('dones',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('note', sa.VARCHAR(length=4096), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['id'], ['tasks.id'], name='dones_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='dones_pkey')
    )
    op.drop_table('dones', schema='todoist')
    op.drop_index(op.f('ix_todoist_tasks_title'), table_name='tasks', schema='todoist')
    op.drop_index(op.f('ix_todoist_tasks_status_type'), table_name='tasks', schema='todoist')
    op.drop_table('tasks', schema='todoist')
    # ### end Alembic commands ###
